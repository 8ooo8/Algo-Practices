[169] Majority Element  

https://leetcode.com/problems/majority-element/description/

* algorithms
* Easy (63.10%)
* Likes:    9941
* Dislikes: 344
* Total Accepted:    1.3M
* Total Submissions: 2M
* Testcase Example:  '[3,2,3]'
* Source Code:       /Users/MeoWow/Documents/_CAREER_/_git_/algo-practices/leetcode/[169] Majority Element/169.majority-element.java

Given an array nums of size n, return the majority element.

The majority element is the element that appears more than &lfloor;n / 2&rfloor; times. You may assume that the majority element always exists in the array.

 
Example 1:
Input: nums = [3,2,3]
Output: 3
Example 2:
Input: nums = [2,2,1,1,1,2,2]
Output: 2

 
Constraints:


	n == nums.length
	1 <= n <= 5 * 104
	-109 <= nums[i] <= 109


 
Follow-up: Could you solve the problem in linear time and in O(1) space?
