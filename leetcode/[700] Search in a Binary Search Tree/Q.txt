[700] Search in a Binary Search Tree  

https://leetcode.com/problems/search-in-a-binary-search-tree/description/

* algorithms
* Easy (74.67%)
* Likes:    3149
* Dislikes: 149
* Total Accepted:    457.6K
* Total Submissions: 600.6K
* Testcase Example:  '[4,2,7,1,3]\n2'
* Source Code:       /Users/MeoWow/Documents/_CAREER_/_git_/algo-practices/leetcode/[700] Search in a Binary Search Tree/700.search-in-a-binary-search-tree.js

You are given the root of a binary search tree (BST) and an integer val.

Find the node in the BST that the node's value equals val and return the subtree rooted with that node. If such a node does not exist, return null.

 
Example 1:


Input: root = [4,2,7,1,3], val = 2
Output: [2,1,3]


Example 2:


Input: root = [4,2,7,1,3], val = 5
Output: []


 
Constraints:


	The number of nodes in the tree is in the range [1, 5000].
	1 <= Node.val <= 107
	root is a binary search tree.
	1 <= val <= 107


